
[tool.poetry]
name = "cdf_fabric_replicator"
version = "1.0.0b1"
description = "Stream data from CDF to Fabric/Onelake"
authors = ["Murad Saeter <murad.sater@cognite.com>"]

[tool.poetry.group.dev.dependencies]
coverage = {extras = ["toml"], version = "^7.4.4"}
pytest = "^6.2.5"
pytest_mock = "^3.6.1"

[tool.black]
line-length = 120
target_version = ['py38']
include = '\.py$'

[tool.isort]
line_length=120                # corresponds to -w  flag
multi_line_output=3            # corresponds to -m  flag
include_trailing_comma=true    # corresponds to -tc flag
skip_glob = '^((?!py$).)*$'    # this makes sort all Python files
known_third_party = ["azure", "cognite", "prometheus_client"]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
cognite-sdk = "^7.26.0"
cognite-extractor-utils = "^7.0.0"
azure-identity = "^1.15.0"
azure-storage-file-datalake = "^12.14.0"
deltalake = "^0.16.0"
pandas = "^2.2.1"


[tool.poetry.dev-dependencies]
pyinstaller = "^6.0"
macholib = {version = "^1.14", platform = "darwin"}             # Used by pyinstaller pn Mac OS
pywin32-ctypes = {version = "^0.2.0", platform = "win32"}       # Used by pyinstaller on Windows
pefile = "^2023.0.0"                                           # Used by pyinstaller on Windows
mypy = "*"
pre-commit = "*"

[tool.poetry.scripts]
cdf_fabric_replicator = "cdf_fabric_replicator.__main__:main"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.cogex.docker]
tags = ["cognite/cdf-fabric-replicator:{version}"]

[tool.coverage.run]
omit = [".*", "*/tests/*"]
[tool.coverage.report]
fail_under = 90

[tool.pytest.ini_options]
log_cli_level = "warning"
log_cli = true
