name: Unit tests

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:
jobs:
  run-tests:
    runs-on: ubuntu-latest
    environment:
      name: CI

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6
      with:
        python-version: 3.12

    - name: Install u
      run: pip install uv

    - name: install requirements
      run: uv sync --frozen

    - name: Run tests
      env:
        COGNITE_BASE_URL: ${{ vars.COGNITE_BASE_URL }}
        COGNITE_PROJECT: ${{ vars.COGNITE_PROJECT }}
        COGNITE_TOKEN_URL: ${{ vars.COGNITE_TOKEN_URL }}
        COGNITE_CLIENT_ID: ${{ vars.COGNITE_CLIENT_ID }}
        COGNITE_CLIENT_SECRET: ${{ secrets.COGNITE_CLIENT_SECRET }}
        COGNITE_CLIENT_NAME: ${{ vars.COGNITE_CLIENT_NAME }}
        COGNITE_EXTRACTION_PIPELINE: ${{ vars.COGNITE_EXTRACTION_PIPELINE }}
        COGNITE_TOKEN_SCOPES: ${{ vars.COGNITE_TOKEN_SCOPES }}
        LAKEHOUSE_ABFSS_PREFIX: ${{ vars.LAKEHOUSE_ABFSS_PREFIX }}
        DPS_TABLE_NAME: ${{ vars.DPS_TABLE_NAME }}
        TS_TABLE_NAME: ${{ vars.TS_TABLE_NAME }}
        EVENT_TABLE_NAME: ${{ vars.EVENT_TABLE_NAME }}
        AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
        AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
        EXTRACTOR_RAW_TS_PATH: ${{ vars.EXTRACTOR_RAW_TS_PATH }}
        TEST_CONFIG_PATH: tests/integration/test_config.yaml
        EXTRACTOR_FILE_PATH: ${{ vars.EXTRACTOR_FILE_PATH }}

      run: uv run coverage run --source cdf_fabric_extractor -m pytest -v tests/unit
