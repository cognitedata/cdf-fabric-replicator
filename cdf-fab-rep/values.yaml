# Default values for cdf-fab-rep.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: ktstacrhelmdeploy.azurecr.io/ktst-conn-6
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

replicaCount: 1
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# image:
#   repository: ktstacrhelmdeploy.azurecr.io/ktst-helm-image
#   pullPolicy: Always
#   # Overrides the image tag whose default is the chart appVersion.
#   tag: "latest"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

externals:
  dataProviders:
    cognite:
      clientSecret: "TestClientSecret"

streams:
  enriched:
    eventHub:
      consumerGroup: "TestConsumerGroup"

env:
  COGNITE_TOKEN_URL: "https://login.microsoftonline.com/1a3fbda0-40c8-437f-9d41-d6ebb12194c6/oauth2/v2.0/token"
  COGNITE_CLIENT_ID: "8cbfc9c5-9f9a-45c6-b484-1fdbaea968e2"
  COGNITE_CLIENT_SECRET: ""
  COGNITE_TOKEN_SCOPES: "https://westeurope-1.cognitedata.com/.default"
  COGNITE_CLIENT_NAME: "carbon-client-name"
  COGNITE_PROJECT: "carbon-platform-sandbox"
  COGNITE_BASE_URL: "https://westeurope-1.cognitedata.com"
  COGNITE_STATE_TABLE: "TestStateTableTwelve"
  DPS_TABLE_NAME: "CalculatedTimeseries"
  TS_TABLE_NAME: "TimeSeries"
  LAKEHOUSE_TIMESERIES_TABLE: TimeSeries
  LAKEHOUSE_TABLE_NAME: "testtimeseriestable"
  LAKEHOUSE_DM_EDGE_TABLE_NAME: TestEdgeTable
  LAKEHOUSE_DM_NODE_TABLE_NAME: TestNodeTable
  LAKEHOUSE_ABFSS_PREFIX: "abfss://FabricCogniteDemo@onelake.dfs.fabric.microsoft.com/CogniteLakehouse.Lakehouse"
  EXTRACTOR_EVENT_PATH: "Tables/RawEvents"
  EXTRACTOR_FILE_PATH: "Files/tank_thumbnail.png"
  EXTRACTOR_RAW_TS_PATH: "Tables/RawTS"
  EXTRACTOR_DATASET_ID: "3351080165451477"
  EXTRACTOR_TS_PREFIX: "np"
  EXTRACTOR_DESTINATION_TYPE: "ffgg"
  EVENT_TABLE_NAME: "KtestEvents"
  COGNITE_STATE_DB: "cdffabricreplicator"
  COGNITE_EXTRACTION_PIPELINE: "fabric-replicator"
# cognite:
#   tokenUrl: "https://login.microsoftonline.com/1a3fbda0-40c8-437f-9d41-d6ebb12194c6/oauth2/v2.0/token"
#   clientName: "carbon-client-name"
#   clientId: "768d61e8-f85f-47e9-918e-828f0a26f100"
#   clientSecret: ""
#   tokenScopes: "https://bluefield.cognitedata.com/.default"
#   project: "cdf-fabric-integration-test"
#   baseUrl: "https://bluefield.cognitedata.com"
#   stateTable: "TestStateTableTwelve"
# lakehouse:
#   timeseriesTable: "TimeSeries"
#   tableName: "testtimeseriestable"
#   dmEdgeTableName: "TestEdgeTable"
#   dmNodeTableName: "TestNodeTable"
#   abfssPrefix: "abfss://Data_Activator_Workspace@msit-onelake.dfs.fabric.microsoft.com/lakehouse.Lakehouse"
# dps:
#   tableName: "CalculatedTimeseries"
# ts:
#   tableName: "TimeSeries"
# test:
#   configPath: "/Users/kchalupa/source/cedar/cdf-collab/cdf-fabric-replicator/tests/integration/test_config.yaml"
# extractor:
#   eventPath: "Tables/testevents3"
#   filePath: "Files/tank_thumbnail.png"
#   rawTsPath: "Tables/mtu_historic"
#   datasetId: "3351080165451477"
#   tsPrefix: "test"
#   destinationType: "test"
# event:
#   tableName: "KtestEvents"
